syntax = "proto3";
package proto;

message Empty {}

service Integration {
    rpc Init(IntegrationInitReq) returns (Empty);
    rpc Export(Empty) returns (Empty);    
}

message IntegrationInitReq {
    uint32 server_id = 1;
}

service Agent {
    // ExportStarted is called after starting export for a certain type
    rpc ExportStarted(ExportStartedReq) returns (Empty);

    // ExportDone is called after export is completed for a certain type
    rpc ExportDone(ExportDoneReq) returns (Empty);

    // SendExported forwards the exported objects from intergration to agent, which then upload the data when necessary
    rpc SendExported(SendExportedReq) returns (Empty);
}

message ExportStartedReq {
    // modelType is the type of the object. i.e. sourcecode.commit
    string model_type = 1;
}

message ExportDoneReq {
    // modelType is the type of the object. i.e. sourcecode.commit
    string model_type = 1;
}

message SendExportedReq {
    // modelType is the type of the object. i.e. sourcecode.commit
    string model_type = 1;
    // objs is the objects to send in this batch
    repeated ExportObj objs = 2; 
}

message ExportObj {
    enum DataType {
        JSON = 0;
        AVRO = 1;
    }
    DataType data_type = 1;
    bytes data = 2;
}

