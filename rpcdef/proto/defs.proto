syntax = "proto3";
package proto;

message Empty {}

service Integration {
    rpc Init(IntegrationInitReq) returns (Empty);
    rpc Export(IntegrationExportReq) returns (IntegrationExportResp);    
    rpc ValidateConfig(IntegrationValidateConfigReq) returns (IntegrationValidateConfigResp);
    rpc OnboardExport(IntegrationOnboardExportReq) returns (IntegrationOnboardExportResp);
}

message IntegrationInitReq {
    uint32 server_id = 1;
}

message IntegrationExportReq {
    IntegrationExportConfig config = 1;
}

message IntegrationExportConfig {
    bytes integration_config_json = 1;
    IntegrationAgentConfig agent_config = 2;   
    bool use_oauth = 3;
}

message IntegrationAgentConfig {
    string customer_id = 1;
}

message IntegrationExportResp {
}

message IntegrationValidateConfigReq {
    IntegrationExportConfig config = 1;
}

message IntegrationValidateConfigResp {
    repeated string errors = 1;
    string repo_url = 2;
}

message IntegrationOnboardExportReq {
    IntegrationExportConfig config = 1;
    enum Kind {
        USERS = 0;
        REPOS = 1;
        PROJECTS = 2;
        WORKCONFIG = 3;
    }
    Kind kind = 2;
}

message IntegrationOnboardExportResp {
    enum Error {
        NONE = 0;
        NOT_SUPPORTED = 1;
    }
    Error error = 1;
    bytes data_json = 2;
}

service Agent {
    rpc ExportStarted(ExportStartedReq) returns (ExportStartedResp);

    rpc ExportDone(ExportDoneReq) returns (Empty);

    rpc SendExported(SendExportedReq) returns (Empty);

    rpc ExportGitRepo(ExportGitRepoReq) returns (Empty);

    rpc SessionStart(SessionStartReq) returns (SessionStartResp);

    rpc SessionProgress(SessionProgressReq) returns (Empty);

    rpc OAuthNewAccessToken(Empty) returns (OAuthNewAccessTokenResp);

    rpc SendPauseEvent(SendPauseEventReq) returns (Empty);

    rpc SendResumeEvent(SendResumeEventReq) returns (Empty);
}

message LastProcessed {
    string data_str  = 1;
}

message ExportStartedReq {
    string model_type = 1;    
}

message ExportStartedResp {
    string session_id = 1;
    LastProcessed last_processed = 2;
}

message ExportDoneReq {
    string session_id = 1;
    LastProcessed last_processed = 2;
}

message SendExportedReq {
    string session_id = 1;
    repeated ExportObj objs = 3; 
}

message ExportObj {
    enum DataType {
        JSON = 0;
    }
    DataType data_type = 1;
    bytes data = 2;
}

message ExportGitRepoReq {
    string repo_id = 1;    
    string unique_name = 2;
    string ref_type = 3;    
    string url = 4;
    string commit_url_template = 5;
    string branch_url_template = 6;
    repeated ExportGitRepoPR prs = 7;
}

message ExportGitRepoPR {
    string id = 1;
    string ref_id = 2;
    string url = 3;
    string last_commit_sha = 4;    
}

message SessionStartReq {
    bool is_tracking = 1;
    string name = 2;
    int64 parent_session_id = 3;
    string parent_object_id = 4;
    string parent_object_name = 5;
}

message SessionStartResp {
    int64 session_id = 1;
    LastProcessed last_processed = 2;
}

message SessionProgressReq {
    int64 id = 1;    
    int64 current = 2;
    int64 total = 3;
}

message OAuthNewAccessTokenResp {
    string token = 1;
}

message SendPauseEventReq {
    string message = 1;
	int64 epoch = 2;
	int64 offset = 3;
	string rfc3339 = 4;
}

message SendResumeEventReq {
    string message = 1;
}
